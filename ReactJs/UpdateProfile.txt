import {React,useEffect,useState }from 'react'
import "./Profile.css";
import { useParams } from 'react-router-dom';
import Axios from "axios";
export default function Profile() {
    let {userName}=useParams();
    const [data,setData]=useState({
        userPic:"",
        role:[{}]
    });
    const [isVerified,setIsVerified]=useState(false);
    const [file,setFile]=useState(null);
    const[modifiedData,setModifiedData]=useState({
        userFirstName: "",
        userLastName: "",
        userPassword:"",
        userEmail: "",
        userPic:"",
        oldPassword:"",
        newPassword:"",
        confirmPassword:"",
    });
    useEffect(() => {
        const token=localStorage.getItem('jwtToken');
        Axios.get(`http://localhost:8080/getAccountDetails/${userName}`,
        { headers: {"Authorization" : `Bearer  ${token}`} })
        .then((response)=>{
            setData(response.data);
            console.log(response.data);
        })
        .catch((error)=>{
            alert("Something Went Wrong.")
            console.log(error);
        })
    }, [])
    const SubmitForm=()=>{
        if(modifiedData.oldPassword.length>0 && modifiedData.newPassword.length>0){
            if(modifiedData.newPassword===modifiedData.confirmPassword){
                const postData={
                    userName:data.userName,
                    userPassword:modifiedData.oldPassword
                }
                const token = localStorage.getItem('jwtToken');
                const api=`http://localhost:8080/checkPassword`;
                Axios.post(api,postData, { headers: {"Authorization" : `Bearer  ${token}`} })
                .then((response)=>{
                    console.log(response);
                    setIsVerified(true);
                })
                .catch((error)=>{
                    console.log(error);
                    alert("Old Password is Incorrect");
                })
            }else{
                alert("New password and Confirm is not Matching.")
            }
        }else{
            postModifiedData();
        }
    }
    const postModifiedData=()=>{
        const postData={
            userName:data.userName,
            userFirstName:(modifiedData.userFirstName!=="")?modifiedData.userFirstName:data.userFirstName, 
            userLastName: (modifiedData.userLastName!=="")?modifiedData.userLastName:data.userLastName,
            userPassword:"",
            userEmail: (modifiedData.userEmail!=="")?modifiedData.userEmail:data.userEmail,
            userPic:(modifiedData.userPic!=="")?modifiedData.userPic:data.userPic,
        }
        console.log(postData);
    }
    
  return (
    <div className="container">
<div className="row justify-content-center">
    <div className="col-12 col-lg-10 col-xl-8 mx-auto">
        <h2 className="h3 mb-4 page-title">Settings</h2>
        <div className="my-4">
            <ul className="nav nav-tabs mb-4" id="myTab" role="tablist">
                <li className="nav-item">
                    <a className="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="false">Profile</a>
                </li>
            </ul>
            <form>
                <div className="row mt-5 align-items-center">
                    <div className="col-md-3 text-center mb-5">
                        <div className="avatar avatar-xl">
                            <img src={`http://localhost:8080/file/download/${data.userPic}`}className="avatar-img rounded-circle" />
                        </div>
                    </div>
                    <div className="col">
                        <div className="row align-items-center">
                            <div className="col-md-7">
                                <h4 className="mb-1">{data.userName}</h4>
                                <p className="small mb-3"><span className="badge badge-dark">{data.role[0].roleName}
                                </span></p>
                            </div>
                        </div>
                    </div>
                </div>
                <hr className="my-4" />
                <div className="form-row">
                    <div className="form-group col-md-6">
                        <label >Firstname</label>
                        <input type="text" onChange={(event)=>{
                            setModifiedData({...modifiedData,userFirstName:event.target.value})
                        }} className="form-control" placeholder={data.userFirstName} />
                    </div>
                    <div className="form-group col-md-6">
                        <label for="lastname">Lastname</label>
                        <input type="text" onChange={(event)=>{
                            setModifiedData({...modifiedData,userLastName:event.target.value})
                        }}  className="form-control" placeholder={data.userLastName} />
                    </div>
                </div>
                <div className="form-group">
                    <label for="inputEmail4">Email</label>
                    <input type="email" onChange={(event)=>{
                            setModifiedData({...modifiedData,userEmail:event.target.value})
                        }} className="form-control" placeholder={data.userEmail} />
                </div>
                <div className="form-row">
                    <div className="form-group col-md-4">
                        <label >Zip</label>
                        <input type="file" onChange={(e)=>{
                            var x = e.target.files[0].name;
                            var f = x.substr(0, x.lastIndexOf('.'));
                            setFile( e.target.files[0]);
                            modifiedData({...modifiedData,userPic:f})
                        }} 
                        className="form-control" placeholder="98232" />
                    </div>
                </div>
                <hr className="my-4" />
                <div className="row mb-4">
                    <div className="col-md-6">
                        <div className="form-group">
                            <label for="inputPassword4">Old Password</label>
                            <input type="password" onChange={(event)=>{
                            setModifiedData({...modifiedData,oldPassword:event.target.value})
                        }}  className="form-control"/>
                        </div>
                        <div className="form-group">
                            <label for="inputPassword5">New Password</label>
                            <input type="password" onChange={(event)=>{
                            setModifiedData({...modifiedData,newPassword:event.target.value
                            ,userPassword:event.target.value
                            });
                        }} className="form-control" />
                        </div>
                        <div className="form-group">
                            <label for="inputPassword6">Confirm Password</label>
                            <input type="password" onChange={(event)=>{
                            setModifiedData({...modifiedData,confirmPassword:event.target.value});
                        }} className="form-control"/>
                        </div>
                    </div>
                    <div className="col-md-6">
                        <p className="mb-2">Password requirements</p>
                        <p className="small text-muted mb-2">To create a new password, you have to meet all of the following requirements:</p>
                        <ul className="small text-muted pl-4 mb-0">
                            <li>Minimum 8 character</li>
                            <li>At least one special character</li>
                            <li>At least one number</li>
                            <li>Canâ€™t be the same as a previous password</li>
                        </ul>
                    </div>
                </div>
            </form>
            <button type="click" onClick={SubmitForm} className="btn btn-primary">Save Change</button>
        </div>
    </div>
</div>

</div>
  )
}

